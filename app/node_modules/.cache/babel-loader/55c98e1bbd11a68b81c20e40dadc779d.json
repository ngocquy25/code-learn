{"ast":null,"code":"var _jsxFileName = \"/Users/jirou/Coding/React/code-learn/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Questions from './components/Questions';\nimport SplitPane from 'react-split-pane';\nimport Editor from './components/layout/Editor';\nimport Problem from './components/layout/Problem';\nimport Testcase from './components/layout/Testcase';\nimport './App.css';\nimport './styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  let [questions, setQuestion] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001\").then(res => res.json()).then(data => {\n      setQuestion(data.data);\n    }, error => {\n      setQuestion(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(SplitPane, {\n      split: \"vertical\",\n      defaultSize: \"45%\",\n      minSize: 400,\n      maxSize: 900,\n      children: [/*#__PURE__*/_jsxDEV(Problem, {\n        question: questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Testcase, {\n          question: questions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BWw4JiLx4J/TQVKSzXfCU/6BPWw=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jirou/Coding/React/code-learn/app/src/App.js"],"names":["React","useState","useEffect","Questions","SplitPane","Editor","Problem","Testcase","App","questions","setQuestion","fetch","then","res","json","data","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAGA,OAAO,WAAP;AACA,OAAO,qBAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,MAAI,CAACC,SAAD,EAAYC,WAAZ,IAA2BT,QAAQ,CAAC,EAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACVL,MAAAA,WAAW,CAACK,IAAI,CAACA,IAAN,CAAX;AACD,KAJL,EAKKC,KAAD,IAAW;AACTN,MAAAA,WAAW,CAACM,KAAD,CAAX;AACD,KAPL;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,SAAD;AACA,MAAA,KAAK,EAAC,UADN;AAEA,MAAA,WAAW,EAAC,KAFZ;AAGA,MAAA,OAAO,EAAE,GAHT;AAIA,MAAA,OAAO,EAAE,GAJT;AAAA,8BAME,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAjCuBD,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Questions from './components/Questions';\nimport SplitPane from 'react-split-pane';\nimport Editor from './components/layout/Editor';\nimport Problem from './components/layout/Problem';\nimport Testcase from './components/layout/Testcase';\n\n\nimport './App.css';\nimport './styles/styles.css';\n\nexport default function App() {\n\n  let [questions, setQuestion] = useState([]);\n  \n  useEffect(() => {\n    fetch(\"http://localhost:3001\")\n      .then(res => res.json())\n      .then(data => {\n          setQuestion(data.data);\n        },\n        (error) => {\n          setQuestion(error);\n        }\n      )\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <SplitPane\n      split='vertical'\n      defaultSize='45%'\n      minSize={400}\n      maxSize={900}\n      >\n        <Problem question={questions}/>\n        <div class=\"right\">\n          <Editor/>\n          <Testcase question={questions}/>\n        </div>\n      </SplitPane>\n      {/* <Questions question={questions}/> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}