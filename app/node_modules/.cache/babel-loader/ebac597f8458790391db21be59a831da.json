{"ast":null,"code":"var _jsxFileName = \"/Users/jirou/Coding/React/code-learn/app/src/components/nav/navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Pagination } from \"react-bootstrap\";\nimport '../../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavBar = () => {\n  _s();\n\n  let [question, setQuestion] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001\").then(res => res.json()).then(data => {\n      setQuestion(data.data);\n    }, error => {\n      setQuestion(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"navbar\",\n    children: question.map(quest => {\n      const {\n        question_id\n      } = quest;\n      return /*#__PURE__*/_jsxDEV(Pagination, {\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Pagination.First, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          children: question_id\n        }, question_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Next, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBar, \"ilupgx6klQrt2PM1+S3Jk0I3TrM=\");\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/jirou/Coding/React/code-learn/app/src/components/nav/navbar.js"],"names":["React","useState","useEffect","Pagination","NavBar","question","setQuestion","fetch","then","res","json","data","error","map","quest","question_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kCAAP;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAO,yBAAP;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVL,MAAAA,WAAW,CAACK,IAAI,CAACA,IAAN,CAAX;AACC,KAJL,EAKKC,KAAD,IAAW;AACXN,MAAAA,WAAW,CAACM,KAAD,CAAX;AACC,KAPL;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA,cACKP,QAAQ,CAACQ,GAAT,CAAaC,KAAK,IAAI;AACnB,YAAM;AACFC,QAAAA;AADE,UAEFD,KAFJ;AAGA,0BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,IAAjB;AAAA,gCACI,QAAC,UAAD,CAAY,KAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,UAAD,CAAY,IAAZ;AAAA,oBAAoCC;AAApC,WAAsBA,WAAtB;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAbA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAjCM;;GAAMX,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Pagination } from \"react-bootstrap\";\nimport '../../styles/styles.css';\n\nexport const NavBar = () => {\n    let [question, setQuestion] = useState([]);\n  \n    useEffect(() => {\n        fetch(\"http://localhost:3001\")\n        .then(res => res.json())\n        .then(data => {\n            setQuestion(data.data);\n            },\n            (error) => {\n            setQuestion(error);\n            }\n        )\n    }, []);\n\n    return (\n        <div class=\"navbar\">\n            {question.map(quest => {\n                const {\n                    question_id\n                } = quest;\n                return (\n                    <Pagination size='sm'>\n                        <Pagination.First />\n                        <Pagination.Prev />\n                        <Pagination.Item key={question_id}>{question_id}</Pagination.Item>\n                        <Pagination.Next />\n                        <Pagination.Last />\n                    </Pagination>\n                )\n            })}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}