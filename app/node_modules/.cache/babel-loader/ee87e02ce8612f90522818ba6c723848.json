{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar editorOptions_1 = require(\"./editorOptions\");\n\nvar ace = (0, editorOptions_1.getAceInstance)();\n\nvar ace_builds_1 = require(\"ace-builds\");\n\nvar ext_split_1 = require(\"ace-builds/src-noconflict/ext-split\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar isEqual = require(\"lodash.isequal\");\n\nvar get = require(\"lodash.get\");\n\nvar SplitComponent =\n/** @class */\nfunction (_super) {\n  __extends(SplitComponent, _super);\n\n  function SplitComponent(props) {\n    var _this = _super.call(this, props) || this;\n\n    editorOptions_1.editorEvents.forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n    _this.debounce = editorOptions_1.debounce;\n    return _this;\n  }\n\n  SplitComponent.prototype.isInShadow = function (node) {\n    var parent = node && node.parentNode;\n\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  };\n\n  SplitComponent.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var _a = this.props,\n        className = _a.className,\n        onBeforeLoad = _a.onBeforeLoad,\n        mode = _a.mode,\n        focus = _a.focus,\n        theme = _a.theme,\n        fontSize = _a.fontSize,\n        value = _a.value,\n        defaultValue = _a.defaultValue,\n        cursorStart = _a.cursorStart,\n        showGutter = _a.showGutter,\n        wrapEnabled = _a.wrapEnabled,\n        showPrintMargin = _a.showPrintMargin,\n        _b = _a.scrollMargin,\n        scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b,\n        keyboardHandler = _a.keyboardHandler,\n        onLoad = _a.onLoad,\n        commands = _a.commands,\n        annotations = _a.annotations,\n        markers = _a.markers,\n        splits = _a.splits;\n    this.editor = ace.edit(this.refEditor);\n\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n\n    this.editor.setTheme(\"ace/theme/\" + theme);\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    var editorProps = Object.keys(this.props.editorProps);\n    var split = new ext_split_1.Split(this.editor.container, \"ace/theme/\" + theme, splits);\n    this.editor.env.split = split;\n    this.splitEditor = split.getEditor(0);\n    this.split = split; // in a split scenario we don't want a print margin for the entire application\n\n    this.editor.setShowPrintMargin(false);\n    this.editor.renderer.setShowGutter(false); // get a list of possible options to avoid 'misspelled option errors'\n\n    var availableOptions = this.splitEditor.$options;\n\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);\n    }\n\n    split.forEach(function (editor, index) {\n      for (var i = 0; i < editorProps.length; i++) {\n        editor[editorProps[i]] = _this.props.editorProps[editorProps[i]];\n      }\n\n      var defaultValueForEditor = get(defaultValue, index);\n      var valueForEditor = get(value, index, \"\");\n      editor.session.setUndoManager(new ace.UndoManager());\n      editor.setTheme(\"ace/theme/\" + theme);\n      editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);\n      editor.getSession().setMode(\"ace/mode/\" + mode);\n      editor.setFontSize(fontSize);\n      editor.renderer.setShowGutter(showGutter);\n      editor.getSession().setUseWrapMode(wrapEnabled);\n      editor.setShowPrintMargin(showPrintMargin);\n      editor.on(\"focus\", _this.onFocus);\n      editor.on(\"blur\", _this.onBlur);\n      editor.on(\"input\", _this.onInput);\n      editor.on(\"copy\", _this.onCopy);\n      editor.on(\"paste\", _this.onPaste);\n      editor.on(\"change\", _this.onChange);\n      editor.getSession().selection.on(\"changeSelection\", _this.onSelectionChange);\n      editor.getSession().selection.on(\"changeCursor\", _this.onCursorChange);\n      editor.session.on(\"changeScrollTop\", _this.onScroll);\n      editor.setValue(defaultValueForEditor === undefined ? valueForEditor : defaultValueForEditor, cursorStart);\n      var newAnnotations = get(annotations, index, []);\n      var newMarkers = get(markers, index, []);\n      editor.getSession().setAnnotations(newAnnotations);\n\n      if (newMarkers && newMarkers.length > 0) {\n        _this.handleMarkers(newMarkers, editor);\n      }\n\n      for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n        var option = editorOptions_1.editorOptions[i];\n\n        if (availableOptions.hasOwnProperty(option)) {\n          editor.setOption(option, _this.props[option]);\n        } else if (_this.props[option]) {\n          console.warn(\"ReaceAce: editor option \" + option + \" was activated but not found. Did you need to import a related tool or did you possibly mispell the option?\");\n        }\n      }\n\n      _this.handleOptions(_this.props, editor);\n\n      if (Array.isArray(commands)) {\n        commands.forEach(function (command) {\n          if (typeof command.exec === \"string\") {\n            editor.commands.bindKey(command.bindKey, command.exec);\n          } else {\n            editor.commands.addCommand(command);\n          }\n        });\n      }\n\n      if (keyboardHandler) {\n        editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n      }\n    });\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (focus) {\n      this.splitEditor.focus();\n    }\n\n    var sp = this.editor.env.split;\n    sp.setOrientation(this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE);\n    sp.resize(true);\n\n    if (onLoad) {\n      onLoad(sp);\n    }\n  };\n\n  SplitComponent.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n\n    var oldProps = prevProps;\n    var nextProps = this.props;\n    var split = this.editor.env.split;\n\n    if (nextProps.splits !== oldProps.splits) {\n      split.setSplits(nextProps.splits);\n    }\n\n    if (nextProps.orientation !== oldProps.orientation) {\n      split.setOrientation(nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE);\n    }\n\n    split.forEach(function (editor, index) {\n      if (nextProps.mode !== oldProps.mode) {\n        editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n      }\n\n      if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n        if (nextProps.keyboardHandler) {\n          editor.setKeyboardHandler(\"ace/keyboard/\" + nextProps.keyboardHandler);\n        } else {\n          editor.setKeyboardHandler(null);\n        }\n      }\n\n      if (nextProps.fontSize !== oldProps.fontSize) {\n        editor.setFontSize(nextProps.fontSize);\n      }\n\n      if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n        editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n      }\n\n      if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n        editor.setShowPrintMargin(nextProps.showPrintMargin);\n      }\n\n      if (nextProps.showGutter !== oldProps.showGutter) {\n        editor.renderer.setShowGutter(nextProps.showGutter);\n      }\n\n      for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n        var option = editorOptions_1.editorOptions[i];\n\n        if (nextProps[option] !== oldProps[option]) {\n          editor.setOption(option, nextProps[option]);\n        }\n      }\n\n      if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n        _this.handleOptions(nextProps, editor);\n      }\n\n      var nextValue = get(nextProps.value, index, \"\");\n\n      if (editor.getValue() !== nextValue) {\n        // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n        _this.silent = true;\n        var pos = editor.session.selection.toJSON();\n        editor.setValue(nextValue, nextProps.cursorStart);\n        editor.session.selection.fromJSON(pos);\n        _this.silent = false;\n      }\n\n      var newAnnotations = get(nextProps.annotations, index, []);\n      var oldAnnotations = get(oldProps.annotations, index, []);\n\n      if (!isEqual(newAnnotations, oldAnnotations)) {\n        editor.getSession().setAnnotations(newAnnotations);\n      }\n\n      var newMarkers = get(nextProps.markers, index, []);\n      var oldMarkers = get(oldProps.markers, index, []);\n\n      if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\n        _this.handleMarkers(newMarkers, editor);\n      }\n    });\n\n    if (nextProps.className !== oldProps.className) {\n      var appliedClasses = this.refEditor.className;\n      var appliedClassesArray_1 = appliedClasses.trim().split(\" \");\n      var oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(function (oldClass) {\n        var index = appliedClassesArray_1.indexOf(oldClass);\n        appliedClassesArray_1.splice(index, 1);\n      });\n      this.refEditor.className = \" \" + nextProps.className + \" \" + appliedClassesArray_1.join(\" \");\n    }\n\n    if (nextProps.theme !== oldProps.theme) {\n      split.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n\n    if (nextProps.focus && !oldProps.focus) {\n      this.splitEditor.focus();\n    }\n\n    if (nextProps.height !== this.props.height || nextProps.width !== this.props.width) {\n      this.editor.resize();\n    }\n  };\n\n  SplitComponent.prototype.componentWillUnmount = function () {\n    this.editor.destroy();\n    this.editor = null;\n  };\n\n  SplitComponent.prototype.onChange = function (event) {\n    if (this.props.onChange && !this.silent) {\n      var value_1 = [];\n      this.editor.env.split.forEach(function (editor) {\n        value_1.push(editor.getValue());\n      });\n      this.props.onChange(value_1, event);\n    }\n  };\n\n  SplitComponent.prototype.onSelectionChange = function (event) {\n    if (this.props.onSelectionChange) {\n      var value_2 = [];\n      this.editor.env.split.forEach(function (editor) {\n        value_2.push(editor.getSelection());\n      });\n      this.props.onSelectionChange(value_2, event);\n    }\n  };\n\n  SplitComponent.prototype.onCursorChange = function (event) {\n    if (this.props.onCursorChange) {\n      var value_3 = [];\n      this.editor.env.split.forEach(function (editor) {\n        value_3.push(editor.getSelection());\n      });\n      this.props.onCursorChange(value_3, event);\n    }\n  };\n\n  SplitComponent.prototype.onFocus = function (event) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  SplitComponent.prototype.onInput = function (event) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n  };\n\n  SplitComponent.prototype.onBlur = function (event) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  SplitComponent.prototype.onCopy = function (text) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  };\n\n  SplitComponent.prototype.onPaste = function (text) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  };\n\n  SplitComponent.prototype.onScroll = function () {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  };\n\n  SplitComponent.prototype.handleOptions = function (props, editor) {\n    var setOptions = Object.keys(props.setOptions);\n\n    for (var y = 0; y < setOptions.length; y++) {\n      editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n    }\n  };\n\n  SplitComponent.prototype.handleMarkers = function (markers, editor) {\n    // remove foreground markers\n    var currentMarkers = editor.getSession().getMarkers(true);\n\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    } // remove background markers\n\n\n    currentMarkers = editor.getSession().getMarkers(false);\n\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    } // add new markers\n\n\n    markers.forEach(function (_a) {\n      var startRow = _a.startRow,\n          startCol = _a.startCol,\n          endRow = _a.endRow,\n          endCol = _a.endCol,\n          className = _a.className,\n          type = _a.type,\n          _b = _a.inFront,\n          inFront = _b === void 0 ? false : _b;\n      var range = new ace_builds_1.Range(startRow, startCol, endRow, endCol);\n      editor.getSession().addMarker(range, className, type, inFront);\n    });\n  };\n\n  SplitComponent.prototype.updateRef = function (item) {\n    this.refEditor = item;\n  };\n\n  SplitComponent.prototype.render = function () {\n    var _a = this.props,\n        name = _a.name,\n        width = _a.width,\n        height = _a.height,\n        style = _a.style;\n\n    var divStyle = __assign({\n      width: width,\n      height: height\n    }, style);\n\n    return React.createElement(\"div\", {\n      ref: this.updateRef,\n      id: name,\n      style: divStyle\n    });\n  };\n\n  SplitComponent.propTypes = {\n    className: PropTypes.string,\n    debounceChangePeriod: PropTypes.number,\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\n    focus: PropTypes.bool,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.string,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    orientation: PropTypes.string,\n    showGutter: PropTypes.bool,\n    splits: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.string),\n    width: PropTypes.string,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    enableLiveAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    commands: PropTypes.array\n  };\n  SplitComponent.defaultProps = {\n    name: \"ace-editor\",\n    focus: false,\n    orientation: \"beside\",\n    splits: 2,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    value: [],\n    fontSize: 12,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false\n  };\n  return SplitComponent;\n}(React.Component);\n\nexports.default = SplitComponent;","map":{"version":3,"sources":["/Users/jirou/Coding/React/code-learn/node_modules/react-ace/src/split.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  debounce,\n  editorEvents,\n  editorOptions,\n  getAceInstance\n} from \"./editorOptions\";\nconst ace = getAceInstance();\nimport { Ace, Range } from \"ace-builds\";\nimport Editor = Ace.Editor;\nimport { Split } from \"ace-builds/src-noconflict/ext-split\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nconst isEqual = require(\"lodash.isequal\");\nconst get = require(\"lodash.get\");\nimport {\n  IAceOptions,\n  IAnnotation,\n  ICommand,\n  IEditorProps,\n  IMarker\n} from \"./types\";\n\ninterface IAceEditorClass extends Editor {\n  [index: string]: any;\n  $options?: any;\n}\n\nexport interface ISplitEditorProps {\n  [index: string]: any;\n  name?: string;\n  style?: object;\n  /** For available modes see https://github.com/thlorenz/brace/tree/master/mode */\n  mode?: string;\n  /** For available themes see https://github.com/thlorenz/brace/tree/master/theme */\n  theme?: string;\n  height?: string;\n  width?: string;\n  className?: string;\n  fontSize?: number | string;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  highlightActiveLine?: boolean;\n  focus?: boolean;\n  splits: number;\n  debounceChangePeriod?: number;\n  cursorStart?: number;\n  wrapEnabled?: boolean;\n  readOnly?: boolean;\n  minLines?: number;\n  maxLines?: number;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  tabSize?: number;\n  value?: string[];\n  defaultValue?: string[];\n  scrollMargin?: number[];\n  orientation?: string;\n  onSelectionChange?: (value: any, event?: any) => void;\n  onCursorChange?: (value: any, event?: any) => void;\n  onInput?: (event?: any) => void;\n  onLoad?: (editor: IEditorProps) => void;\n  onBeforeLoad?: (ace: any) => void;\n  onChange?: (value: string[], event?: any) => void;\n  onSelection?: (selectedText: string, event?: any) => void;\n  onCopy?: (value: string) => void;\n  onPaste?: (value: string) => void;\n  onFocus?: (value: Event) => void;\n  onBlur?: (value: Event) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  editorProps?: IEditorProps;\n  setOptions?: IAceOptions;\n  keyboardHandler?: string;\n  commands?: ICommand[];\n  annotations?: IAnnotation[][];\n  markers?: IMarker[][];\n}\n\nexport default class SplitComponent extends React.Component<\n  ISplitEditorProps,\n  undefined\n> {\n  [index: string]: any;\n\n  public static propTypes: PropTypes.ValidationMap<ISplitEditorProps> = {\n    className: PropTypes.string,\n    debounceChangePeriod: PropTypes.number,\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\n    focus: PropTypes.bool,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.string,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    orientation: PropTypes.string,\n    showGutter: PropTypes.bool,\n    splits: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.string),\n    width: PropTypes.string,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    enableLiveAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    commands: PropTypes.array\n  };\n  public static defaultProps: Partial<ISplitEditorProps> = {\n    name: \"ace-editor\",\n    focus: false,\n    orientation: \"beside\",\n    splits: 2,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    value: [],\n    fontSize: 12,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false\n  };\n  public editor: IAceEditorClass;\n  public refEditor: HTMLElement;\n  public silent: boolean;\n  public split: IAceEditorClass;\n  public splitEditor: IAceEditorClass;\n  public debounce: (fn: any, delay: number) => (...args: any) => void;\n  constructor(props: ISplitEditorProps) {\n    super(props);\n    editorEvents.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n    this.debounce = debounce;\n  }\n  public isInShadow(node: HTMLElement): boolean {\n    let parent = node && node.parentNode;\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n      parent = parent.parentNode;\n    }\n    return false;\n  }\n  public componentDidMount() {\n    const {\n      className,\n      onBeforeLoad,\n      mode,\n      focus,\n      theme,\n      fontSize,\n      value,\n      defaultValue,\n      cursorStart,\n      showGutter,\n      wrapEnabled,\n      showPrintMargin,\n      scrollMargin = [0, 0, 0, 0],\n      keyboardHandler,\n      onLoad,\n      commands,\n      annotations,\n      markers,\n      splits\n    } = this.props;\n\n    this.editor = ace.edit(this.refEditor);\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n    this.editor.setTheme(`ace/theme/${theme}`);\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    const editorProps = Object.keys(this.props.editorProps);\n\n    const split = new Split(\n      this.editor.container,\n      `ace/theme/${theme}`,\n      splits\n    );\n    this.editor.env.split = split;\n\n    this.splitEditor = split.getEditor(0);\n    this.split = split;\n    // in a split scenario we don't want a print margin for the entire application\n    this.editor.setShowPrintMargin(false);\n    this.editor.renderer.setShowGutter(false);\n    // get a list of possible options to avoid 'misspelled option errors'\n    const availableOptions = this.splitEditor.$options;\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(\n        this.onChange,\n        this.props.debounceChangePeriod\n      );\n    }\n    split.forEach((editor: IAceEditorClass, index: number) => {\n      for (let i = 0; i < editorProps.length; i++) {\n        editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n      }\n      const defaultValueForEditor = get(defaultValue, index);\n      const valueForEditor = get(value, index, \"\");\n      editor.session.setUndoManager(new ace.UndoManager());\n      editor.setTheme(`ace/theme/${theme}`);\n      editor.renderer.setScrollMargin(\n        scrollMargin[0],\n        scrollMargin[1],\n        scrollMargin[2],\n        scrollMargin[3]\n      );\n      editor.getSession().setMode(`ace/mode/${mode}`);\n      editor.setFontSize(fontSize as any);\n      editor.renderer.setShowGutter(showGutter);\n      editor.getSession().setUseWrapMode(wrapEnabled);\n      editor.setShowPrintMargin(showPrintMargin);\n      editor.on(\"focus\", this.onFocus);\n      editor.on(\"blur\", this.onBlur);\n      editor.on(\"input\" as any, this.onInput);\n      editor.on(\"copy\", this.onCopy as any);\n      editor.on(\"paste\", this.onPaste as any);\n      editor.on(\"change\", this.onChange);\n      editor\n        .getSession()\n        .selection.on(\"changeSelection\", this.onSelectionChange);\n      editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n      editor.session.on(\"changeScrollTop\", this.onScroll);\n      editor.setValue(\n        defaultValueForEditor === undefined\n          ? valueForEditor\n          : defaultValueForEditor,\n        cursorStart\n      );\n      const newAnnotations = get(annotations, index, []);\n      const newMarkers = get(markers, index, []);\n      editor.getSession().setAnnotations(newAnnotations);\n      if (newMarkers && newMarkers.length > 0) {\n        this.handleMarkers(newMarkers, editor);\n      }\n\n      for (let i = 0; i < editorOptions.length; i++) {\n        const option = editorOptions[i];\n        if (availableOptions.hasOwnProperty(option)) {\n          editor.setOption(option as any, this.props[option]);\n        } else if (this.props[option]) {\n          console.warn(\n            `ReaceAce: editor option ${option} was activated but not found. Did you need to import a related tool or did you possibly mispell the option?`\n          );\n        }\n      }\n      this.handleOptions(this.props, editor);\n\n      if (Array.isArray(commands)) {\n        commands.forEach(command => {\n          if (typeof command.exec === \"string\") {\n            (editor.commands as any).bindKey(command.bindKey, command.exec);\n          } else {\n            (editor.commands as any).addCommand(command);\n          }\n        });\n      }\n\n      if (keyboardHandler) {\n        editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n      }\n    });\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (focus) {\n      this.splitEditor.focus();\n    }\n\n    const sp = this.editor.env.split;\n    sp.setOrientation(\n      this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE\n    );\n    sp.resize(true);\n    if (onLoad) {\n      onLoad(sp);\n    }\n  }\n\n  public componentDidUpdate(prevProps: ISplitEditorProps) {\n    const oldProps = prevProps;\n    const nextProps = this.props;\n\n    const split = this.editor.env.split;\n\n    if (nextProps.splits !== oldProps.splits) {\n      split.setSplits(nextProps.splits);\n    }\n\n    if (nextProps.orientation !== oldProps.orientation) {\n      split.setOrientation(\n        nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE\n      );\n    }\n\n    split.forEach((editor: IAceEditorClass, index: number) => {\n      if (nextProps.mode !== oldProps.mode) {\n        editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n      }\n      if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n        if (nextProps.keyboardHandler) {\n          editor.setKeyboardHandler(\n            \"ace/keyboard/\" + nextProps.keyboardHandler\n          );\n        } else {\n          editor.setKeyboardHandler(null);\n        }\n      }\n      if (nextProps.fontSize !== oldProps.fontSize) {\n        editor.setFontSize(nextProps.fontSize as any);\n      }\n      if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n        editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n      }\n      if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n        editor.setShowPrintMargin(nextProps.showPrintMargin);\n      }\n      if (nextProps.showGutter !== oldProps.showGutter) {\n        editor.renderer.setShowGutter(nextProps.showGutter);\n      }\n\n      for (let i = 0; i < editorOptions.length; i++) {\n        const option = editorOptions[i];\n        if (nextProps[option] !== oldProps[option]) {\n          editor.setOption(option as any, nextProps[option]);\n        }\n      }\n      if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n        this.handleOptions(nextProps, editor);\n      }\n      const nextValue = get(nextProps.value, index, \"\");\n      if (editor.getValue() !== nextValue) {\n        // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n        this.silent = true;\n        const pos = (editor.session.selection as any).toJSON();\n        editor.setValue(nextValue, nextProps.cursorStart);\n        (editor.session.selection as any).fromJSON(pos);\n        this.silent = false;\n      }\n      const newAnnotations = get(nextProps.annotations, index, []);\n      const oldAnnotations = get(oldProps.annotations, index, []);\n      if (!isEqual(newAnnotations, oldAnnotations)) {\n        editor.getSession().setAnnotations(newAnnotations);\n      }\n\n      const newMarkers = get(nextProps.markers, index, []);\n      const oldMarkers = get(oldProps.markers, index, []);\n      if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\n        this.handleMarkers(newMarkers, editor);\n      }\n    });\n\n    if (nextProps.className !== oldProps.className) {\n      const appliedClasses = this.refEditor.className;\n      const appliedClassesArray = appliedClasses.trim().split(\" \");\n      const oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(oldClass => {\n        const index = appliedClassesArray.indexOf(oldClass);\n        appliedClassesArray.splice(index, 1);\n      });\n      this.refEditor.className =\n        \" \" + nextProps.className + \" \" + appliedClassesArray.join(\" \");\n    }\n\n    if (nextProps.theme !== oldProps.theme) {\n      split.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n\n    if (nextProps.focus && !oldProps.focus) {\n      this.splitEditor.focus();\n    }\n    if (\n      nextProps.height !== this.props.height ||\n      nextProps.width !== this.props.width\n    ) {\n      this.editor.resize();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.editor.destroy();\n    this.editor = null;\n  }\n\n  public onChange(event: any) {\n    if (this.props.onChange && !this.silent) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getValue());\n      });\n      this.props.onChange(value, event);\n    }\n  }\n\n  public onSelectionChange(event: any) {\n    if (this.props.onSelectionChange) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getSelection());\n      });\n      this.props.onSelectionChange(value, event);\n    }\n  }\n  public onCursorChange(event: any) {\n    if (this.props.onCursorChange) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getSelection());\n      });\n      this.props.onCursorChange(value, event);\n    }\n  }\n  public onFocus(event: any) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  }\n\n  public onInput(event: any) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n  }\n\n  public onBlur(event: any) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  }\n\n  public onCopy(text: string) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  }\n\n  public onPaste(text: string) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  }\n\n  public onScroll() {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  }\n\n  public handleOptions(props: ISplitEditorProps, editor: IAceEditorClass) {\n    const setOptions = Object.keys(props.setOptions);\n    for (let y = 0; y < setOptions.length; y++) {\n      editor.setOption(setOptions[y] as any, props.setOptions[setOptions[y]]);\n    }\n  }\n\n  public handleMarkers(markers: IMarker[], editor: IAceEditorClass) {\n    // remove foreground markers\n    let currentMarkers = editor.getSession().getMarkers(true);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // remove background markers\n    currentMarkers = editor.getSession().getMarkers(false);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // add new markers\n    markers.forEach(\n      ({\n        startRow,\n        startCol,\n        endRow,\n        endCol,\n        className,\n        type,\n        inFront = false\n      }) => {\n        const range = new Range(startRow, startCol, endRow, endCol);\n        editor\n          .getSession()\n          .addMarker(range as any, className, type as any, inFront);\n      }\n    );\n  }\n\n  public updateRef(item: HTMLElement) {\n    this.refEditor = item;\n  }\n\n  public render() {\n    const { name, width, height, style } = this.props;\n    const divStyle = { width, height, ...style };\n    return <div ref={this.updateRef} id={name} style={divStyle} />;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}