{"ast":null,"code":"var _jsxFileName = \"/Users/jirou/Coding/React/code-learn/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Questions from './components/Questions';\nimport SplitPane from 'react-split-pane';\nimport Editor from './components/layout/Editor';\nimport Problem from './components/layout/Problem';\nimport Testcase from './components/layout/Testcase';\nimport './App.css';\nimport './styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [questions, setQuestion] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      setLoading(true);\n      const res = await axios.get('http://localhost:3001');\n      setQuestion(res.data);\n      setLoading(false);\n    };\n\n    fetchQuestions();\n  }, []); // useEffect(() => {\n  //   fetch(\"http://localhost:3001\")\n  //     .then(res => res.json())\n  //     .then(data => {\n  //         setQuestion(data.data);\n  //       },\n  //       (error) => {\n  //         setQuestion(error);\n  //       }\n  //     )\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(SplitPane, {\n      split: \"vertical\",\n      defaultSize: \"45%\",\n      minSize: 400,\n      maxSize: 900,\n      children: [/*#__PURE__*/_jsxDEV(Problem, {\n        question: questions,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Testcase, {\n          question: questions,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5vIPpEwySuoGlA2NCcuXwKYE8oQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jirou/Coding/React/code-learn/app/src/App.js"],"names":["React","useState","useEffect","axios","Questions","SplitPane","Editor","Problem","Testcase","App","questions","setQuestion","loading","setLoading","currentPage","setCurrentPage","fetchQuestions","res","get","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,OAAO,WAAP;AACA,OAAO,qBAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,cAAc,GAAG,YAAY;AACjCH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMI,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,uBAAV,CAAlB;AACAP,MAAAA,WAAW,CAACM,GAAG,CAACE,IAAL,CAAX;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAOAG,IAAAA,cAAc;AACf,GATQ,EASP,EATO,CAAT,CAL4B,CAe5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,SAAD;AACA,MAAA,KAAK,EAAC,UADN;AAEA,MAAA,WAAW,EAAC,KAFZ;AAGA,MAAA,OAAO,EAAE,GAHT;AAIA,MAAA,OAAO,EAAE,GAJT;AAAA,8BAME,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEN,SAAnB;AAA8B,QAAA,OAAO,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEF,SAApB;AAA+B,UAAA,OAAO,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3CuBH,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Questions from './components/Questions';\nimport SplitPane from 'react-split-pane';\nimport Editor from './components/layout/Editor';\nimport Problem from './components/layout/Problem';\nimport Testcase from './components/layout/Testcase';\n\nimport './App.css';\nimport './styles/styles.css';\n\nexport default function App() {\n  const [questions, setQuestion] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  \n  useEffect(() => {\n    const fetchQuestions = async () => {\n      setLoading(true);\n      const res = await axios.get('http://localhost:3001');\n      setQuestion(res.data);\n      setLoading(false);\n    }\n\n    fetchQuestions();\n  },[])\n  // useEffect(() => {\n  //   fetch(\"http://localhost:3001\")\n  //     .then(res => res.json())\n  //     .then(data => {\n  //         setQuestion(data.data);\n  //       },\n  //       (error) => {\n  //         setQuestion(error);\n  //       }\n  //     )\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <SplitPane\n      split='vertical'\n      defaultSize='45%'\n      minSize={400}\n      maxSize={900}\n      >\n        <Problem question={questions} loading={loading}/>\n        <div class=\"right\">\n          <Editor/>\n          <Testcase question={questions} loading={loading}/>\n        </div>\n      </SplitPane>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}