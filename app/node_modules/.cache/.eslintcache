[{"/Users/jirou/Coding/React/code-learn/app/src/index.js":"1","/Users/jirou/Coding/React/code-learn/app/src/reportWebVitals.js":"2","/Users/jirou/Coding/React/code-learn/app/src/App.js":"3","/Users/jirou/Coding/React/code-learn/app/src/components/layout/Editor.js":"4","/Users/jirou/Coding/React/code-learn/app/src/components/layout/Problem.js":"5","/Users/jirou/Coding/React/code-learn/app/src/components/layout/Testcase.js":"6","/Users/jirou/Coding/React/code-learn/app/src/components/nav/Pagination.js":"7"},{"size":500,"mtime":1642524576987,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1642522897587,"results":"10","hashOfConfig":"9"},{"size":1878,"mtime":1642930243514,"results":"11","hashOfConfig":"9"},{"size":1178,"mtime":1642918019361,"results":"12","hashOfConfig":"9"},{"size":505,"mtime":1642926926497,"results":"13","hashOfConfig":"9"},{"size":3232,"mtime":1642931334627,"results":"14","hashOfConfig":"9"},{"size":1116,"mtime":1642930135063,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dg2wuz",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jirou/Coding/React/code-learn/app/src/index.js",[],"/Users/jirou/Coding/React/code-learn/app/src/reportWebVitals.js",[],"/Users/jirou/Coding/React/code-learn/app/src/App.js",["32"],"import React, { useState, useEffect } from 'react';\n\nimport SplitPane from 'react-split-pane';\nimport Editor from './components/layout/Editor';\nimport Problem from './components/layout/Problem';\nimport Testcase from './components/layout/Testcase';\nimport PaginationBasic from './components/nav/Pagination';\n\nimport './App.css';\nimport './styles/styles.css';\n\nfunction App() {\n  const [questions, setQuestion] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // const changePage = () => {\n\n  // }\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001\")\n      .then(res => res.json())\n      .then(data => {\n          setQuestion(data.data);\n        },\n        (error) => {\n          setQuestion(error);\n        }\n      )\n  }, []);\n\n  // Get current question\n  const totalQuests = questions.length;\n  const currentQuestion = questions.slice(currentPage - 1, currentPage);\n\n  return (\n    <div className=\"App\">\n      <PaginationBasic \n        totalQuestion={totalQuests} \n        paginate={page => setCurrentPage(page)}\n        nextPage={() => {\n          if (currentPage + 1 > totalQuests) {\n            setCurrentPage(totalQuests)\n          } else {\n            setCurrentPage(currentPage + 1)\n          }\n        }}\n        prevPage={() => {\n          if (currentPage == 1) {\n            setCurrentPage(1)\n          } else {\n            setCurrentPage(currentPage - 1)\n          }\n        }}\n        firstPage={() => setCurrentPage(1)}\n        lastPage={() => setCurrentPage(questions.length)}\n        />\n      <SplitPane\n      split='vertical'\n      defaultSize='45%'\n      minSize={400}\n      maxSize={900}\n      id=\"split-pane\"\n      >\n        <Problem question={currentQuestion}/>\n        <div class=\"right\">\n          <Editor/>\n          <Testcase question={currentQuestion}/>\n        </div>\n      </SplitPane>\n    </div>\n  );\n};\n\nexport default App;\n",["33","34"],"/Users/jirou/Coding/React/code-learn/app/src/components/layout/Editor.js",[],"/Users/jirou/Coding/React/code-learn/app/src/components/layout/Problem.js",["35","36"],"/Users/jirou/Coding/React/code-learn/app/src/components/layout/Testcase.js",["37","38","39","40"],"/Users/jirou/Coding/React/code-learn/app/src/components/nav/Pagination.js",["41","42"],{"ruleId":"43","severity":1,"message":"44","line":49,"column":27,"nodeType":"45","messageId":"46","endLine":49,"endColumn":29},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"55","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"56","line":8,"column":20,"nodeType":"53","messageId":"54","endLine":8,"endColumn":29},{"ruleId":"51","severity":1,"message":"57","line":9,"column":21,"nodeType":"53","messageId":"54","endLine":9,"endColumn":31},{"ruleId":"51","severity":1,"message":"58","line":10,"column":20,"nodeType":"53","messageId":"54","endLine":10,"endColumn":29},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":36},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setOutput' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'setResult' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]