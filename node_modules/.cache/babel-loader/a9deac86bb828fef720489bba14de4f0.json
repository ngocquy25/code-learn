{"ast":null,"code":"import React from\"react\";import{Row,Col,Tab,Nav,Accordion}from\"react-bootstrap\";import{BsCheckLg,BsXLg}from\"react-icons/bs\";import'bootstrap/dist/css/bootstrap.css';import'./Testcase.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Testcase=function Testcase(_ref){var question=_ref.question,current=_ref.current,output=_ref.output;// const getText = text => {\n//     return text.split('\\\\n').join('\\n');\n// }\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"testcase\",children:question.map(function(_ref2){var question_id=_ref2.question_id,test_case=_ref2.test_case;return/*#__PURE__*/_jsx(Accordion,{defaultActiveKey:\"0\",flush:true,children:/*#__PURE__*/_jsxs(Accordion.Item,{eventKey:\"0\",children:[/*#__PURE__*/_jsx(Accordion.Header,{className:\"testcase-header\",children:\"TEST CASE\"}),/*#__PURE__*/_jsx(Accordion.Body,{children:/*#__PURE__*/_jsx(Tab.Container,{defaultActiveKey:1,children:current!==question_id?/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:3,id:\"testcase-title\",children:/*#__PURE__*/_jsx(Nav,{variant:\"pills\",className:\"flex-column\",children:test_case.map(function(_ref3){var testcase_id=_ref3.testcase_id;return/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{eventKey:testcase_id,children:[\"Test Case \",testcase_id]})},testcase_id);})})}),/*#__PURE__*/_jsx(Col,{id:\"testcase-content\",children:/*#__PURE__*/_jsx(Tab.Content,{children:test_case.map(function(_ref4){var testcase_id=_ref4.testcase_id,_input=_ref4._input,_output=_ref4._output;return/*#__PURE__*/_jsxs(Tab.Pane,{eventKey:testcase_id,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"field\",sm:4,children:\"Input:\"}),/*#__PURE__*/_jsx(Col,{className:\"value\",sm:6,children:_input})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"field\",sm:4,children:\"Expected Output:\"}),/*#__PURE__*/_jsx(Col,{className:\"value\",sm:6,children:_output})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"field\",sm:4,children:\"Actual Output:\"}),/*#__PURE__*/_jsx(Col,{className:\"value\",sm:6})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"field\",sm:4,children:\"Message:\"}),/*#__PURE__*/_jsx(Col,{className:\"value\",sm:6})]})]},testcase_id);})})})]}):/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:3,id:\"testcase-title\",children:/*#__PURE__*/_jsx(Nav,{variant:\"pills\",className:\"flex-column\",children:output.map(function(_ref5){var id=_ref5.id,message=_ref5.message;return/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:id,children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{children:[\"Test Case \",id]}),/*#__PURE__*/_jsx(Col,{sm:3,children:message===\"Right answer\"?/*#__PURE__*/_jsx(BsCheckLg,{className:\"icon-check\"}):/*#__PURE__*/_jsx(BsXLg,{className:\"icon-x\"})})]})})},id);})})}),/*#__PURE__*/_jsx(Col,{id:\"testcase-content\",children:/*#__PURE__*/_jsx(Tab.Content,{children:output.map(function(_ref6){var id=_ref6.id,input=_ref6.input,expectedOutput=_ref6.expectedOutput,actualOutput=_ref6.actualOutput,message=_ref6.message;return/*#__PURE__*/_jsxs(Tab.Pane,{eventKey:id,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"field\",sm:4,children:\"Input:\"}),/*#__PURE__*/_jsx(Col,{className:\"value\",sm:6,children:input})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"field\",sm:4,children:\"Expected Output:\"}),/*#__PURE__*/_jsx(Col,{className:\"value\",sm:6,children:expectedOutput})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"field\",sm:4,children:\"Actual Output:\"}),/*#__PURE__*/_jsx(Col,{className:\"value\",sm:6,children:actualOutput})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"field\",sm:4,children:\"Message:\"}),/*#__PURE__*/_jsx(Col,{className:\"value\",sm:6,children:message})]})]},id);})})})]})})})]})},question_id);})});};export default Testcase;","map":{"version":3,"sources":["/Users/jirou/Coding/React/code-learn/src/components/Testcase/Testcase.js"],"names":["React","Row","Col","Tab","Nav","Accordion","BsCheckLg","BsXLg","Testcase","question","current","output","map","question_id","test_case","testcase_id","_input","_output","id","message","input","expectedOutput","actualOutput"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Tab, Nav, Accordion } from \"react-bootstrap\";\nimport { BsCheckLg, BsXLg } from \"react-icons/bs\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Testcase.css';\n\n\nconst Testcase = ({question, current, output}) => {\n\n    // const getText = text => {\n    //     return text.split('\\\\n').join('\\n');\n    // }\n\n    return(\n        <div className=\"testcase\">\n            {question.map(({\n                question_id,\n                test_case\n            }) => (\n            <Accordion key={question_id} defaultActiveKey=\"0\" flush>\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header className=\"testcase-header\">TEST CASE</Accordion.Header>\n                    <Accordion.Body>\n                        <Tab.Container defaultActiveKey={1} >\n                            { current !== question_id?\n                            <Row>\n                                <Col sm={3} id=\"testcase-title\">\n                                    <Nav variant=\"pills\" className=\"flex-column\">\n                                    {test_case.map(({\n                                        testcase_id\n                                    }) => (\n                                        <Nav.Item key={testcase_id}>\n                                            <Nav.Link eventKey={testcase_id}>Test Case {testcase_id}</Nav.Link>\n                                        </Nav.Item>                                     \n                                    ))}                                        \n                                    </Nav> \n                                </Col>\n                                <Col id=\"testcase-content\">\n                                    <Tab.Content>\n                                    {test_case.map(({\n                                        testcase_id,\n                                        _input,\n                                        _output\n                                    }) => (\n                                        <Tab.Pane eventKey={testcase_id} key={testcase_id}>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Input:</Col>\n                                                <Col className=\"value\" sm={6}>{_input}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Expected Output:</Col>\n                                                <Col className=\"value\" sm={6}>{_output}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Actual Output:</Col>\n                                                <Col className=\"value\" sm={6}></Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Message:</Col>\n                                                <Col className=\"value\" sm={6}></Col>\n                                            </Row>                                                                                               \n                                        </Tab.Pane>\n                                    ))}\n                                    </Tab.Content>\n                                </Col>\n                            </Row>:\n                            <Row>\n                                <Col sm={3} id=\"testcase-title\">\n                                    <Nav variant=\"pills\" className=\"flex-column\">\n                                    {output.map(({\n                                        id, message\n                                    }) => (\n                                        <Nav.Item key={id}>\n                                            <Nav.Link eventKey={id}>\n                                                <Row>\n                                                    <Col>Test Case {id}</Col>\n                                                    <Col sm={3}>\n                                                        { message === \"Right answer\"? \n                                                            <BsCheckLg className=\"icon-check\"/> \n                                                            : <BsXLg className=\"icon-x\"/>}\n                                                    </Col>\n                                                </Row>\n                                            </Nav.Link>\n                                        </Nav.Item>                                     \n                                    ))}\n                                    </Nav>\n                                </Col>\n                                <Col id=\"testcase-content\">\n                                    <Tab.Content>\n                                    {output.map(({\n                                        id,\n                                        input,\n                                        expectedOutput,\n                                        actualOutput,\n                                        message\n                                    }) => (\n                                        <Tab.Pane eventKey={id} key={id}>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Input:</Col>\n                                                <Col className=\"value\" sm={6}>{input}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Expected Output:</Col>\n                                                <Col className=\"value\" sm={6}>{expectedOutput}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Actual Output:</Col>\n                                                <Col className=\"value\" sm={6}>{actualOutput}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Message:</Col>\n                                                <Col className=\"value\" sm={6}>{message}</Col>\n                                            </Row>                                                        \n                                        </Tab.Pane>\n                                    ))}\n                                    </Tab.Content>\n                                </Col>\n                            </Row>                            \n                            }\n                        </Tab.Container>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n            ))}\n        </div>\n    )\n};\n\nexport default Testcase;\n\n"]},"metadata":{},"sourceType":"module"}