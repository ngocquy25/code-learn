{"ast":null,"code":"var _jsxFileName = \"/Users/jirou/Coding/React/code-learn/src/components/Testcase/Testcase.js\";\nimport React from \"react\";\nimport { Row, Col, Tab, Nav, Accordion } from \"react-bootstrap\";\nimport { BsCheckLg, BsXLg } from \"react-icons/bs\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Testcase.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Testcase = _ref => {\n  let {\n    question,\n    current,\n    output\n  } = _ref;\n  // const getText = text => {\n  //     return text.split('\\\\n').join('\\n');\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"testcase\",\n    children: question.map(_ref2 => {\n      let {\n        question_id,\n        test_case\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        flush: true,\n        children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            className: \"testcase-header\",\n            children: \"TEST CASE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: /*#__PURE__*/_jsxDEV(Tab.Container, {\n              defaultActiveKey: 1,\n              children: current !== question_id ? /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 3,\n                  id: \"testcase-title\",\n                  children: /*#__PURE__*/_jsxDEV(Nav, {\n                    variant: \"pills\",\n                    className: \"flex-column\",\n                    children: test_case.map(_ref3 => {\n                      let {\n                        testcase_id\n                      } = _ref3;\n                      return /*#__PURE__*/_jsxDEV(Nav.Item, {\n                        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                          eventKey: testcase_id,\n                          children: [\"Test Case \", testcase_id]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 34,\n                          columnNumber: 45\n                        }, this)\n                      }, testcase_id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 33,\n                        columnNumber: 41\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  id: \"testcase-content\",\n                  children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n                    children: test_case.map(_ref4 => {\n                      let {\n                        testcase_id,\n                        _input,\n                        _output\n                      } = _ref4;\n                      return /*#__PURE__*/_jsxDEV(Tab.Pane, {\n                        eventKey: testcase_id,\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            className: \"field\",\n                            sm: 4,\n                            children: \"Input:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 48,\n                            columnNumber: 49\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"value\",\n                            sm: 6,\n                            children: _input\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 49,\n                            columnNumber: 49\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 47,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            className: \"field\",\n                            sm: 4,\n                            children: \"Expected Output:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 52,\n                            columnNumber: 49\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"value\",\n                            sm: 6,\n                            children: _output\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 53,\n                            columnNumber: 49\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 51,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            className: \"field\",\n                            sm: 4,\n                            children: \"Actual Output:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 56,\n                            columnNumber: 49\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"value\",\n                            sm: 6\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 57,\n                            columnNumber: 49\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 55,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            className: \"field\",\n                            sm: 4,\n                            children: \"Message:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 60,\n                            columnNumber: 49\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"value\",\n                            sm: 6\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 61,\n                            columnNumber: 49\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 59,\n                          columnNumber: 45\n                        }, this)]\n                      }, testcase_id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 46,\n                        columnNumber: 41\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 29\n              }, this) : /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 3,\n                  id: \"title\",\n                  children: /*#__PURE__*/_jsxDEV(Nav, {\n                    variant: \"pills\",\n                    className: \"flex-column\",\n                    children: output.map(_ref5 => {\n                      let {\n                        id,\n                        message\n                      } = _ref5;\n                      return /*#__PURE__*/_jsxDEV(Nav.Item, {\n                        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                          eventKey: id,\n                          children: /*#__PURE__*/_jsxDEV(Row, {\n                            children: [/*#__PURE__*/_jsxDEV(Col, {\n                              children: [\"Test Case \", id]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 77,\n                              columnNumber: 53\n                            }, this), /*#__PURE__*/_jsxDEV(Col, {\n                              sm: 3,\n                              children: message === \"Right answer\" ? /*#__PURE__*/_jsxDEV(BsCheckLg, {\n                                className: \"icon-check\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 80,\n                                columnNumber: 61\n                              }, this) : /*#__PURE__*/_jsxDEV(BsXLg, {\n                                className: \"icon-x\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 81,\n                                columnNumber: 63\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 78,\n                              columnNumber: 53\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 76,\n                            columnNumber: 49\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 75,\n                          columnNumber: 45\n                        }, this)\n                      }, id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 41\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  id: \"content\",\n                  children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n                    children: output.map(_ref6 => {\n                      let {\n                        id,\n                        input,\n                        expectedOutput,\n                        actualOutput,\n                        message\n                      } = _ref6;\n                      return /*#__PURE__*/_jsxDEV(Tab.Pane, {\n                        eventKey: id,\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            className: \"field\",\n                            sm: 4,\n                            children: \"Input:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 100,\n                            columnNumber: 49\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"value\",\n                            sm: 6,\n                            children: input\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 101,\n                            columnNumber: 49\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 99,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            className: \"field\",\n                            sm: 4,\n                            children: \"Expected Output:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 104,\n                            columnNumber: 49\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"value\",\n                            sm: 6,\n                            children: expectedOutput\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 105,\n                            columnNumber: 49\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 103,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            className: \"field\",\n                            sm: 4,\n                            children: \"Actual Output:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 108,\n                            columnNumber: 49\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"value\",\n                            sm: 6,\n                            children: actualOutput\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 109,\n                            columnNumber: 49\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 107,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            className: \"field\",\n                            sm: 4,\n                            children: \"Message:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 112,\n                            columnNumber: 49\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"value\",\n                            sm: 6,\n                            children: message\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 113,\n                            columnNumber: 49\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 111,\n                          columnNumber: 45\n                        }, this)]\n                      }, id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 41\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, question_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Testcase;\nexport default Testcase;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testcase\");","map":{"version":3,"sources":["/Users/jirou/Coding/React/code-learn/src/components/Testcase/Testcase.js"],"names":["React","Row","Col","Tab","Nav","Accordion","BsCheckLg","BsXLg","Testcase","question","current","output","map","question_id","test_case","testcase_id","_input","_output","id","message","input","expectedOutput","actualOutput"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Tab, Nav, Accordion } from \"react-bootstrap\";\nimport { BsCheckLg, BsXLg } from \"react-icons/bs\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './Testcase.css';\n\n\nconst Testcase = ({question, current, output}) => {\n\n    // const getText = text => {\n    //     return text.split('\\\\n').join('\\n');\n    // }\n\n    return(\n        <div className=\"testcase\">\n            {question.map(({\n                question_id,\n                test_case\n            }) => (\n            <Accordion key={question_id} defaultActiveKey=\"0\" flush>\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header className=\"testcase-header\">TEST CASE</Accordion.Header>\n                    <Accordion.Body>\n                        <Tab.Container defaultActiveKey={1} >\n                            { current !== question_id?\n                            <Row>\n                                <Col sm={3} id=\"testcase-title\">\n                                    <Nav variant=\"pills\" className=\"flex-column\">\n                                    {test_case.map(({\n                                        testcase_id\n                                    }) => (\n                                        <Nav.Item key={testcase_id}>\n                                            <Nav.Link eventKey={testcase_id}>Test Case {testcase_id}</Nav.Link>\n                                        </Nav.Item>                                     \n                                    ))}                                        \n                                    </Nav> \n                                </Col>\n                                <Col id=\"testcase-content\">\n                                    <Tab.Content>\n                                    {test_case.map(({\n                                        testcase_id,\n                                        _input,\n                                        _output\n                                    }) => (\n                                        <Tab.Pane eventKey={testcase_id} key={testcase_id}>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Input:</Col>\n                                                <Col className=\"value\" sm={6}>{_input}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Expected Output:</Col>\n                                                <Col className=\"value\" sm={6}>{_output}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Actual Output:</Col>\n                                                <Col className=\"value\" sm={6}></Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Message:</Col>\n                                                <Col className=\"value\" sm={6}></Col>\n                                            </Row>                                                                                               \n                                        </Tab.Pane>\n                                    ))}\n                                    </Tab.Content>\n                                </Col>\n                            </Row>:\n                            <Row>\n                                <Col sm={3} id=\"title\">\n                                    <Nav variant=\"pills\" className=\"flex-column\">\n                                    {output.map(({\n                                        id, message\n                                    }) => (\n                                        <Nav.Item key={id}>\n                                            <Nav.Link eventKey={id}>\n                                                <Row>\n                                                    <Col>Test Case {id}</Col>\n                                                    <Col sm={3}>\n                                                        { message === \"Right answer\"? \n                                                            <BsCheckLg className=\"icon-check\"/> \n                                                            : <BsXLg className=\"icon-x\"/>}\n                                                    </Col>\n                                                </Row>\n                                            </Nav.Link>\n                                        </Nav.Item>                                     \n                                    ))}\n                                    </Nav>\n                                </Col>\n                                <Col id=\"content\">\n                                    <Tab.Content>\n                                    {output.map(({\n                                        id,\n                                        input,\n                                        expectedOutput,\n                                        actualOutput,\n                                        message\n                                    }) => (\n                                        <Tab.Pane eventKey={id} key={id}>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Input:</Col>\n                                                <Col className=\"value\" sm={6}>{input}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Expected Output:</Col>\n                                                <Col className=\"value\" sm={6}>{expectedOutput}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Actual Output:</Col>\n                                                <Col className=\"value\" sm={6}>{actualOutput}</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"field\" sm={4}>Message:</Col>\n                                                <Col className=\"value\" sm={6}>{message}</Col>\n                                            </Row>                                                        \n                                        </Tab.Pane>\n                                    ))}\n                                    </Tab.Content>\n                                </Col>\n                            </Row>                            \n                            }\n                        </Tab.Container>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n            ))}\n        </div>\n    )\n};\n\nexport default Testcase;\n\n"]},"metadata":{},"sourceType":"module"}