{"ast":null,"code":"var _jsxFileName = \"/Users/jirou/Coding/React/code-learn/src/components/Problem/Problem.js\";\nimport React from \"react\";\nimport './Problem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Problem = _ref => {\n  let {\n    question\n  } = _ref;\n\n  const getText = text => {\n    return text.split('\\\\n').join('\\n');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problem\",\n    children: question.map(_ref2 => {\n      let {\n        question_id,\n        question_title,\n        problem,\n        _level,\n        input_format,\n        output_format,\n        explanation,\n        constraint_input,\n        constraint_output,\n        constraint_time,\n        sample_input,\n        sample_output\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: question_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"level\",\n            children: [\"Difficulty:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-value\",\n              children: _level\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: \"Problem Statement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: problem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: \"Input format:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: input_format\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: \"Output format:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: output_format\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: \"Explanation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: explanation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: \"Explanation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: explanation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: \"Constraints:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Input: \", constraint_input]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Output: \", constraint_output]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Execution Time Limited: \", constraint_time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: \"Sample Input:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: sample_input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: \"Sample Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: sample_output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, question_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Problem;\nexport default Problem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"sources":["/Users/jirou/Coding/React/code-learn/src/components/Problem/Problem.js"],"names":["React","Problem","question","getText","text","split","join","map","question_id","question_title","problem","_level","input_format","output_format","explanation","constraint_input","constraint_output","constraint_time","sample_input","sample_output"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport './Problem.css';\n\nconst Problem = ({ question }) => {\n\n    const getText = text => {\n        return text.split('\\\\n').join('\\n');\n    }\n\n    return(\n        <div className=\"problem\">\n            {question.map(({\n                question_id,\n                question_title,\n                problem,\n                _level,\n                input_format,\n                output_format,\n                explanation,\n                constraint_input,\n                constraint_output,\n                constraint_time,\n                sample_input,\n                sample_output\n            }) => (\n                <div key={question_id}>\n                    <div className=\"header\">\n                        <div className=\"title\">{question_title}</div>\n                        <div className=\"level\">\n                            Difficulty: \n                            <span className=\"level-value\">{_level}</span>\n                        </div>\n                    </div>\n                    <div className=\"body\">\n                        <div className=\"field\">Problem Statement</div>\n                        <div className=\"value\">{problem}</div>\n                        <div className=\"field\">Input format:</div>\n                        <div className=\"value\">{input_format}</div>\n                        <div className=\"field\">Output format:</div>\n                        <div className=\"value\">{output_format}</div>\n                        <div className=\"field\">Explanation:</div>\n                        <div className=\"value\">{explanation}</div>\n                        <div className=\"field\">Explanation:</div>\n                        <div className=\"value\">{explanation}</div>\n                        <div className=\"field\">Constraints:</div>\n                        <div className=\"value\">\n                            <div>Input: {constraint_input}</div>\n                            <div>Output: {constraint_output}</div>\n                            <div>Execution Time Limited: {constraint_time}</div>\n                        </div>\n                        <div className=\"field\">Sample Input:</div>\n                        <div className=\"value\">{sample_input}</div>  \n                        <div className=\"field\">Sample Output:</div>\n                        <div className=\"value\">{sample_output}</div>           \n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Problem;"]},"metadata":{},"sourceType":"module"}